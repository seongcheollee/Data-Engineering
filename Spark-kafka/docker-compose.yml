version: '3'
services:
  jupyter:
    image: jupyter/all-spark-notebook:python-3.8
    ports:
      - '8888:8888'
    volumes:
      - ./notebooks:/home/jovyan/work
    command: start-notebook.sh --NotebookApp.token='' --NotebookApp.password=''
    networks:
      - my_network

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper-coin
    ports:
      - '2181:2181'
    networks:
      - my_network

  kafka:
    image: wurstmeister/kafka
    container_name: kafka-coin
    ports:
      - '9092:9092'
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka-coin
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - my_network

  grafana:
    image: grafana/grafana:6.5.0
    container_name: grafana
    restart: unless-stopped
    ports:
      - 3000:3000
    env_file:
      - ./Grafana/login_config
    volumes:
      - ./Grafana/grafana_db:/var/lib/grafana:rw #needs command 'sudo chmod -R 777 Grafana/*'
      - ./Grafana/provisioning/datasource:/etc/grafana/provisioning/datasources
      - ./Grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    depends_on:
      - prometheus
    networks:
      - my_network

    # Prometheus Service
  prometheus:
    image: prom/prometheus:v2.20.1
    container_name: prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./Prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./Prometheus/prometheus_db:/prometheus/data:rw #needs command 'sudo chmod -R 777 Prometheus/prometheus_db'
    depends_on:
      - node-exporter
    networks:
      - my_network

    # Node-Exporter Service
  node-exporter:
    image: prom/node-exporter:v1.0.1
    container_name: node-exporter
    ports:
      - 9100:9100
    restart: unless-stopped
    networks:
      - my_network
networks:
  my_network:
    driver: bridge
